#!/usr/bin/env ruby
require "bundler"
Bundler.setup

require "unicorn"
require "uri"
require "./lib/git_http"

APP_DIR = File.expand_path(File.join(__FILE__, "..", ".."))
SYSTEM  = `echo $(uname)-$(uname -m)`.strip

ENV["PATH"] = "#{APP_DIR}/vendor/#{SYSTEM}/bin:#{ENV["PATH"]}"

if git_remote = ENV["GIT_REMOTE"]
  uri = URI.parse(git_remote)

  repo = File.join(APP_DIR, File.basename(uri.path))
  system "rm -rf #{repo}; git init --bare #{repo}"
  system "cp #{APP_DIR}/bin/pre-receive #{repo}/hooks/"

  netrc = File.join(ENV["HOME"], ".netrc")
  File.open(netrc, "w") { |f|
    f.puts "machine #{uri.host}"
    f.puts "  login #{uri.user}"
    f.puts "  password #{uri.password}"
  } unless File.exists?(netrc)

  uri.user = uri.password = nil
  ENV["GIT_REMOTE"] = uri.to_s
else
  abort "GIT_REMOTE must be set"
end

app = GitHttp::App.new({
  :project_root => APP_DIR,
  :upload_pack  => true,
  :receive_pack => true,
})

app = Rack::CommonLogger.new(app)

opts = {
  listeners:        "0.0.0.0:#{ENV["PORT"] || 5000}",
  timeout:          1800,
  worker_processes: 1
}

Unicorn::HttpServer.new(app, opts).start.join
